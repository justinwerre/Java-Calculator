/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.CardLayout;

/**
 *
 * @author justin
 */
public class Calc extends javax.swing.JFrame
{

    private String num;
    private String memory;
    private char opp;
    private boolean dot;
    private boolean deleteDisplay;
    private int base;
    private int pmemory;
    private int pnum;

    /**
     * Creates new form Calc
     */
    public Calc()
    {
        initComponents();
        pnum = 0;
        dot = false;
        opp = '$';
        deleteDisplay = true;
        base = 10;
        pmemory = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        Calcmode = new javax.swing.ButtonGroup();
        Base = new javax.swing.ButtonGroup();
        Size = new javax.swing.ButtonGroup();
        jDialog1 = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CalcPanel = new javax.swing.JPanel();
        BasicPanel = new javax.swing.JPanel();
        B0 = new javax.swing.JButton();
        Bdot = new javax.swing.JButton();
        Bplus = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        Bback = new javax.swing.JButton();
        Bmc = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        Bce = new javax.swing.JButton();
        Bmr = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        B9 = new javax.swing.JButton();
        Bc = new javax.swing.JButton();
        Bms = new javax.swing.JButton();
        Bmplus = new javax.swing.JButton();
        Bnegate = new javax.swing.JButton();
        Bdivide = new javax.swing.JButton();
        Bmultiply = new javax.swing.JButton();
        Bsubtrack = new javax.swing.JButton();
        Bmminus = new javax.swing.JButton();
        Broot = new javax.swing.JButton();
        Bpercent = new javax.swing.JButton();
        Binverse = new javax.swing.JButton();
        Bequals = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        ProgrammerPanel = new javax.swing.JPanel();
        Popening = new javax.swing.JButton();
        Pa = new javax.swing.JButton();
        PMC = new javax.swing.JButton();
        Pmr = new javax.swing.JButton();
        Pms = new javax.swing.JButton();
        Pmminus = new javax.swing.JButton();
        Pmplus = new javax.swing.JButton();
        Pclosing = new javax.swing.JButton();
        Pb = new javax.swing.JButton();
        Pback = new javax.swing.JButton();
        Pce = new javax.swing.JButton();
        Pclear = new javax.swing.JButton();
        Pnegate = new javax.swing.JButton();
        Proot = new javax.swing.JButton();
        Prol = new javax.swing.JButton();
        Pror = new javax.swing.JButton();
        Pc = new javax.swing.JButton();
        P7 = new javax.swing.JButton();
        P8 = new javax.swing.JButton();
        P9 = new javax.swing.JButton();
        Pdivide = new javax.swing.JButton();
        Ppercent = new javax.swing.JButton();
        Plish = new javax.swing.JButton();
        Por = new javax.swing.JButton();
        Pnot = new javax.swing.JButton();
        Pmod = new javax.swing.JButton();
        Pxor = new javax.swing.JButton();
        Pd = new javax.swing.JButton();
        P4 = new javax.swing.JButton();
        Prish = new javax.swing.JButton();
        P1 = new javax.swing.JButton();
        Pand = new javax.swing.JButton();
        Pf = new javax.swing.JButton();
        Pe = new javax.swing.JButton();
        P5 = new javax.swing.JButton();
        P2 = new javax.swing.JButton();
        P6 = new javax.swing.JButton();
        P3 = new javax.swing.JButton();
        Pmultiply = new javax.swing.JButton();
        Pminus = new javax.swing.JButton();
        Pinverse = new javax.swing.JButton();
        P0 = new javax.swing.JButton();
        Pdot = new javax.swing.JButton();
        Pplus = new javax.swing.JButton();
        Pequals = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        Phex = new javax.swing.JRadioButton();
        Poct = new javax.swing.JRadioButton();
        Pbin = new javax.swing.JRadioButton();
        Pdec = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        Pword = new javax.swing.JRadioButton();
        Pbyte = new javax.swing.JRadioButton();
        Pdword = new javax.swing.JRadioButton();
        Pqword = new javax.swing.JRadioButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        BasicRadio = new javax.swing.JRadioButtonMenuItem();
        ProgrammerRadio = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        AboutButton = new javax.swing.JMenuItem();

        jDialog1.setTitle("About");
        jDialog1.setMinimumSize(new java.awt.Dimension(200, 150));
        jDialog1.setPreferredSize(new java.awt.Dimension(300, 200));

        jButton1.setText("Close");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        jDialog1.getContentPane().add(jButton1, java.awt.BorderLayout.PAGE_END);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel2.setText("Calculator");
        jPanel3.add(jLabel2);

        jLabel3.setText("Version 1.0");
        jPanel3.add(jLabel3);

        jLabel4.setText("By: Justin Werre");
        jPanel3.add(jLabel4);

        jLabel5.setText("December 2012");
        jPanel3.add(jLabel5);

        jDialog1.getContentPane().add(jPanel3, java.awt.BorderLayout.CENTER);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Basic"); // NOI18N
        getContentPane().setLayout(new java.awt.CardLayout());

        CalcPanel.setLayout(new java.awt.CardLayout());

        BasicPanel.setLayout(new java.awt.GridBagLayout());

        B0.setText("0");
        B0.setPreferredSize(new java.awt.Dimension(50, 50));
        B0.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B0, gridBagConstraints);

        Bdot.setText(".");
        Bdot.setPreferredSize(new java.awt.Dimension(50, 50));
        Bdot.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BdotActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bdot, gridBagConstraints);

        Bplus.setText("+");
        Bplus.setPreferredSize(new java.awt.Dimension(50, 50));
        Bplus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BplusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bplus, gridBagConstraints);

        B1.setText("1");
        B1.setPreferredSize(new java.awt.Dimension(50, 50));
        B1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B1, gridBagConstraints);

        B4.setText("4");
        B4.setPreferredSize(new java.awt.Dimension(50, 50));
        B4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B4, gridBagConstraints);

        B7.setText("7");
        B7.setPreferredSize(new java.awt.Dimension(50, 50));
        B7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B7, gridBagConstraints);

        Bback.setText("<-");
        Bback.setPreferredSize(new java.awt.Dimension(50, 50));
        Bback.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BbackActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bback, gridBagConstraints);

        Bmc.setText("MC");
        Bmc.setPreferredSize(new java.awt.Dimension(50, 50));
        Bmc.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmcActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bmc, gridBagConstraints);

        B2.setText("2");
        B2.setPreferredSize(new java.awt.Dimension(50, 50));
        B2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B2, gridBagConstraints);

        B5.setText("5");
        B5.setPreferredSize(new java.awt.Dimension(50, 50));
        B5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B5, gridBagConstraints);

        B8.setText("8");
        B8.setPreferredSize(new java.awt.Dimension(50, 50));
        B8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B8, gridBagConstraints);

        Bce.setText("CE");
        Bce.setPreferredSize(new java.awt.Dimension(50, 50));
        Bce.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bce, gridBagConstraints);

        Bmr.setText("MR");
        Bmr.setPreferredSize(new java.awt.Dimension(50, 50));
        Bmr.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bmr, gridBagConstraints);

        B3.setText("3");
        B3.setPreferredSize(new java.awt.Dimension(50, 50));
        B3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B3, gridBagConstraints);

        B6.setText("6");
        B6.setPreferredSize(new java.awt.Dimension(50, 50));
        B6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B6, gridBagConstraints);

        B9.setText("9");
        B9.setPreferredSize(new java.awt.Dimension(50, 50));
        B9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                B9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(B9, gridBagConstraints);

        Bc.setText("C");
        Bc.setPreferredSize(new java.awt.Dimension(50, 50));
        Bc.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BcActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bc, gridBagConstraints);

        Bms.setText("MS");
        Bms.setPreferredSize(new java.awt.Dimension(50, 50));
        Bms.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bms, gridBagConstraints);

        Bmplus.setText("M+");
        Bmplus.setPreferredSize(new java.awt.Dimension(50, 50));
        Bmplus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmplusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bmplus, gridBagConstraints);

        Bnegate.setText("+/-");
        Bnegate.setPreferredSize(new java.awt.Dimension(50, 50));
        Bnegate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BnegateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bnegate, gridBagConstraints);

        Bdivide.setText("/");
        Bdivide.setPreferredSize(new java.awt.Dimension(50, 50));
        Bdivide.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BdivideActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bdivide, gridBagConstraints);

        Bmultiply.setText("*");
        Bmultiply.setPreferredSize(new java.awt.Dimension(50, 50));
        Bmultiply.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmultiplyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bmultiply, gridBagConstraints);

        Bsubtrack.setText("-");
        Bsubtrack.setPreferredSize(new java.awt.Dimension(50, 50));
        Bsubtrack.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BsubtrackActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bsubtrack, gridBagConstraints);

        Bmminus.setText("M-");
        Bmminus.setPreferredSize(new java.awt.Dimension(50, 50));
        Bmminus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BmminusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bmminus, gridBagConstraints);

        Broot.setText("\u221A");
        Broot.setPreferredSize(new java.awt.Dimension(50, 50));
        Broot.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BrootActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Broot, gridBagConstraints);

        Bpercent.setText("%");
        Bpercent.setPreferredSize(new java.awt.Dimension(50, 50));
        Bpercent.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BpercentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bpercent, gridBagConstraints);

        Binverse.setText("1/x");
        Binverse.setPreferredSize(new java.awt.Dimension(50, 50));
        Binverse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BinverseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Binverse, gridBagConstraints);

        Bequals.setText("=");
        Bequals.setPreferredSize(new java.awt.Dimension(50, 50));
        Bequals.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BequalsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(Bequals, gridBagConstraints);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0");
        jTextField1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextField1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        BasicPanel.add(jTextField1, gridBagConstraints);

        CalcPanel.add(BasicPanel, "card2");

        ProgrammerPanel.setLayout(new java.awt.GridBagLayout());

        Popening.setText("(");
        Popening.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Popening, gridBagConstraints);

        Pa.setText("A");
        Pa.setEnabled(false);
        Pa.setPreferredSize(new java.awt.Dimension(50, 50));
        Pa.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pa, gridBagConstraints);

        PMC.setText("MC");
        PMC.setPreferredSize(new java.awt.Dimension(50, 50));
        PMC.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PMCActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(PMC, gridBagConstraints);

        Pmr.setText("MR");
        Pmr.setPreferredSize(new java.awt.Dimension(50, 50));
        Pmr.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pmr, gridBagConstraints);

        Pms.setText("MS");
        Pms.setPreferredSize(new java.awt.Dimension(50, 50));
        Pms.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pms, gridBagConstraints);

        Pmminus.setText("M-");
        Pmminus.setPreferredSize(new java.awt.Dimension(50, 50));
        Pmminus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmminusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pmminus, gridBagConstraints);

        Pmplus.setText("M+");
        Pmplus.setToolTipText("");
        Pmplus.setPreferredSize(new java.awt.Dimension(50, 50));
        Pmplus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmplusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pmplus, gridBagConstraints);

        Pclosing.setText(")");
        Pclosing.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pclosing, gridBagConstraints);

        Pb.setText("B");
        Pb.setEnabled(false);
        Pb.setPreferredSize(new java.awt.Dimension(50, 50));
        Pb.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pb, gridBagConstraints);

        Pback.setText("<-");
        Pback.setPreferredSize(new java.awt.Dimension(50, 50));
        Pback.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PbackActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pback, gridBagConstraints);

        Pce.setText("CE");
        Pce.setPreferredSize(new java.awt.Dimension(50, 50));
        Pce.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pce, gridBagConstraints);

        Pclear.setText("C");
        Pclear.setPreferredSize(new java.awt.Dimension(50, 50));
        Pclear.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PclearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pclear, gridBagConstraints);

        Pnegate.setText("-/+");
        Pnegate.setPreferredSize(new java.awt.Dimension(50, 50));
        Pnegate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PnegateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pnegate, gridBagConstraints);

        Proot.setText("\u221a");
        Proot.setEnabled(false);
        Proot.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Proot, gridBagConstraints);

        Prol.setText("RoL");
        Prol.setPreferredSize(new java.awt.Dimension(50, 50));
        Prol.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ProlActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Prol, gridBagConstraints);

        Pror.setText("RoR");
        Pror.setPreferredSize(new java.awt.Dimension(50, 50));
        Pror.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ProrActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pror, gridBagConstraints);

        Pc.setText("C");
        Pc.setEnabled(false);
        Pc.setPreferredSize(new java.awt.Dimension(50, 50));
        Pc.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PcActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pc, gridBagConstraints);

        P7.setText("7");
        P7.setPreferredSize(new java.awt.Dimension(50, 50));
        P7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P7ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P7, gridBagConstraints);

        P8.setText("8");
        P8.setPreferredSize(new java.awt.Dimension(50, 50));
        P8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P8ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P8, gridBagConstraints);

        P9.setText("9");
        P9.setPreferredSize(new java.awt.Dimension(50, 50));
        P9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P9, gridBagConstraints);

        Pdivide.setText("/");
        Pdivide.setPreferredSize(new java.awt.Dimension(50, 50));
        Pdivide.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PdivideActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pdivide, gridBagConstraints);

        Ppercent.setText("%");
        Ppercent.setEnabled(false);
        Ppercent.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Ppercent, gridBagConstraints);

        Plish.setText("LsH");
        Plish.setPreferredSize(new java.awt.Dimension(50, 50));
        Plish.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PlishActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Plish, gridBagConstraints);

        Por.setText("Or");
        Por.setPreferredSize(new java.awt.Dimension(50, 50));
        Por.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Por, gridBagConstraints);

        Pnot.setText("Not");
        Pnot.setPreferredSize(new java.awt.Dimension(50, 50));
        Pnot.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PnotActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pnot, gridBagConstraints);

        Pmod.setText("Mod");
        Pmod.setPreferredSize(new java.awt.Dimension(50, 50));
        Pmod.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmodActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pmod, gridBagConstraints);

        Pxor.setText("Xor");
        Pxor.setPreferredSize(new java.awt.Dimension(50, 50));
        Pxor.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PxorActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pxor, gridBagConstraints);

        Pd.setText("D");
        Pd.setEnabled(false);
        Pd.setPreferredSize(new java.awt.Dimension(50, 50));
        Pd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PdActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pd, gridBagConstraints);

        P4.setText("4");
        P4.setPreferredSize(new java.awt.Dimension(50, 50));
        P4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P4, gridBagConstraints);

        Prish.setText("Rsh");
        Prish.setPreferredSize(new java.awt.Dimension(50, 50));
        Prish.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PrishActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Prish, gridBagConstraints);

        P1.setText("1");
        P1.setPreferredSize(new java.awt.Dimension(50, 50));
        P1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P1, gridBagConstraints);

        Pand.setText("And");
        Pand.setPreferredSize(new java.awt.Dimension(50, 50));
        Pand.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PandActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pand, gridBagConstraints);

        Pf.setText("F");
        Pf.setEnabled(false);
        Pf.setPreferredSize(new java.awt.Dimension(50, 50));
        Pf.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PfActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pf, gridBagConstraints);

        Pe.setText("E");
        Pe.setEnabled(false);
        Pe.setPreferredSize(new java.awt.Dimension(50, 50));
        Pe.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pe, gridBagConstraints);

        P5.setText("5");
        P5.setPreferredSize(new java.awt.Dimension(50, 50));
        P5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P5, gridBagConstraints);

        P2.setText("2");
        P2.setPreferredSize(new java.awt.Dimension(50, 50));
        P2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P2, gridBagConstraints);

        P6.setText("6");
        P6.setPreferredSize(new java.awt.Dimension(50, 50));
        P6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P6, gridBagConstraints);

        P3.setText("3");
        P3.setPreferredSize(new java.awt.Dimension(50, 50));
        P3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P3, gridBagConstraints);

        Pmultiply.setText("*");
        Pmultiply.setPreferredSize(new java.awt.Dimension(50, 50));
        Pmultiply.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PmultiplyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pmultiply, gridBagConstraints);

        Pminus.setText("-");
        Pminus.setPreferredSize(new java.awt.Dimension(50, 50));
        Pminus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PminusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pminus, gridBagConstraints);

        Pinverse.setText("1/x");
        Pinverse.setEnabled(false);
        Pinverse.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pinverse, gridBagConstraints);

        P0.setText("0");
        P0.setPreferredSize(new java.awt.Dimension(50, 50));
        P0.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                P0ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(P0, gridBagConstraints);

        Pdot.setText(".");
        Pdot.setEnabled(false);
        Pdot.setPreferredSize(new java.awt.Dimension(50, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pdot, gridBagConstraints);

        Pplus.setText("+");
        Pplus.setPreferredSize(new java.awt.Dimension(50, 50));
        Pplus.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PplusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 7;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pplus, gridBagConstraints);

        Pequals.setText("=");
        Pequals.setPreferredSize(new java.awt.Dimension(50, 50));
        Pequals.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PequalsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(Pequals, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        Base.add(Phex);
        Phex.setText("Hex");
        Phex.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PhexActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(Phex, gridBagConstraints);

        Base.add(Poct);
        Poct.setText("Oct");
        Poct.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PoctActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(Poct, gridBagConstraints);

        Base.add(Pbin);
        Pbin.setText("Bin");
        Pbin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PbinActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(Pbin, gridBagConstraints);

        Base.add(Pdec);
        Pdec.setSelected(true);
        Pdec.setText("Dec");
        Pdec.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PdecActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(Pdec, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        ProgrammerPanel.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        Size.add(Pword);
        Pword.setText("Word");
        Pword.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                PwordActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(Pword, gridBagConstraints);

        Size.add(Pbyte);
        Pbyte.setText("Byte");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(Pbyte, gridBagConstraints);

        Size.add(Pdword);
        Pdword.setText("Dword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(Pdword, gridBagConstraints);

        Size.add(Pqword);
        Pqword.setSelected(true);
        Pqword.setText("Qword");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(Pqword, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 3;
        ProgrammerPanel.add(jPanel2, gridBagConstraints);

        jTextField2.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(jTextField2, gridBagConstraints);

        jTextField3.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        ProgrammerPanel.add(jTextField3, gridBagConstraints);

        CalcPanel.add(ProgrammerPanel, "card3");

        getContentPane().add(CalcPanel, "card4");

        jMenu1.setText("File");

        Calcmode.add(BasicRadio);
        BasicRadio.setSelected(true);
        BasicRadio.setText("Basic");
        BasicRadio.setName("Basic"); // NOI18N
        BasicRadio.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                BasicRadioActionPerformed(evt);
            }
        });
        jMenu1.add(BasicRadio);

        Calcmode.add(ProgrammerRadio);
        ProgrammerRadio.setText("Programmer");
        ProgrammerRadio.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                ProgrammerRadioActionPerformed(evt);
            }
        });
        jMenu1.add(ProgrammerRadio);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        AboutButton.setText("About");
        AboutButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                AboutButtonActionPerformed(evt);
            }
        });
        jMenu2.add(AboutButton);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        getAccessibleContext().setAccessibleName("Calc");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B0ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B0ActionPerformed
    {//GEN-HEADEREND:event_B0ActionPerformed
        displayInput("0");
    }//GEN-LAST:event_B0ActionPerformed

    private void BdotActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BdotActionPerformed
    {//GEN-HEADEREND:event_BdotActionPerformed
       if (!dot)
        {
           displayInput(".");
           dot = true;
        }
    }//GEN-LAST:event_BdotActionPerformed

    private void BplusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BplusActionPerformed
    {//GEN-HEADEREND:event_BplusActionPerformed
        performCalc('+');
    }//GEN-LAST:event_BplusActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B1ActionPerformed
    {//GEN-HEADEREND:event_B1ActionPerformed
        displayInput("1");
    }//GEN-LAST:event_B1ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B4ActionPerformed
    {//GEN-HEADEREND:event_B4ActionPerformed
        displayInput("4");
    }//GEN-LAST:event_B4ActionPerformed

    private void B7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B7ActionPerformed
    {//GEN-HEADEREND:event_B7ActionPerformed
        displayInput("7");
    }//GEN-LAST:event_B7ActionPerformed

    private void BmcActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmcActionPerformed
    {//GEN-HEADEREND:event_BmcActionPerformed
       memory = "";
    }//GEN-LAST:event_BmcActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B2ActionPerformed
    {//GEN-HEADEREND:event_B2ActionPerformed
        displayInput("2");
    }//GEN-LAST:event_B2ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B5ActionPerformed
    {//GEN-HEADEREND:event_B5ActionPerformed
        displayInput("5");
    }//GEN-LAST:event_B5ActionPerformed

    private void B8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B8ActionPerformed
    {//GEN-HEADEREND:event_B8ActionPerformed
        displayInput("8");
    }//GEN-LAST:event_B8ActionPerformed

    private void BceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BceActionPerformed
    {//GEN-HEADEREND:event_BceActionPerformed
        dot = false;
        deleteDisplay = true;
        jTextField1.setText("0");
    }//GEN-LAST:event_BceActionPerformed

    private void BmrActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmrActionPerformed
    {//GEN-HEADEREND:event_BmrActionPerformed
        jTextField1.setText(memory);
    }//GEN-LAST:event_BmrActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B3ActionPerformed
    {//GEN-HEADEREND:event_B3ActionPerformed
        displayInput("3");
    }//GEN-LAST:event_B3ActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B6ActionPerformed
    {//GEN-HEADEREND:event_B6ActionPerformed
        displayInput("6");
    }//GEN-LAST:event_B6ActionPerformed

    private void B9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_B9ActionPerformed
    {//GEN-HEADEREND:event_B9ActionPerformed
        displayInput("9");
    }//GEN-LAST:event_B9ActionPerformed

    private void BcActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BcActionPerformed
    {//GEN-HEADEREND:event_BcActionPerformed
        jTextField1.setText("0");
        dot = false;
        deleteDisplay = true;
        num = "0";
        opp = '$';
    }//GEN-LAST:event_BcActionPerformed

    private void BmsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmsActionPerformed
    {//GEN-HEADEREND:event_BmsActionPerformed
        memory = jTextField1.getText();
    }//GEN-LAST:event_BmsActionPerformed

    private void BmplusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmplusActionPerformed
    {//GEN-HEADEREND:event_BmplusActionPerformed
        Double memValue = new Double(memory);
        Double x = new Double(jTextField1.getText());
        memValue += x;
        memory = memValue.toString();
    }//GEN-LAST:event_BmplusActionPerformed

    private void BnegateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BnegateActionPerformed
    {//GEN-HEADEREND:event_BnegateActionPerformed
        performCalc('~');
    }//GEN-LAST:event_BnegateActionPerformed

    private void BdivideActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BdivideActionPerformed
    {//GEN-HEADEREND:event_BdivideActionPerformed
        performCalc('/');
    }//GEN-LAST:event_BdivideActionPerformed

    private void BmultiplyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmultiplyActionPerformed
    {//GEN-HEADEREND:event_BmultiplyActionPerformed
        performCalc('*');
    }//GEN-LAST:event_BmultiplyActionPerformed

    private void BsubtrackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BsubtrackActionPerformed
    {//GEN-HEADEREND:event_BsubtrackActionPerformed
        performCalc('-');
    }//GEN-LAST:event_BsubtrackActionPerformed

    private void BmminusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BmminusActionPerformed
    {//GEN-HEADEREND:event_BmminusActionPerformed
        Double memValue = new Double(memory);
        Double x = new Double(jTextField1.getText());
        memValue -= x;
        memory = memValue.toString();
    }//GEN-LAST:event_BmminusActionPerformed

    private void BrootActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BrootActionPerformed
    {//GEN-HEADEREND:event_BrootActionPerformed
        performCalc('#');
    }//GEN-LAST:event_BrootActionPerformed

    private void BpercentActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BpercentActionPerformed
    {//GEN-HEADEREND:event_BpercentActionPerformed
        performCalc('%');
    }//GEN-LAST:event_BpercentActionPerformed

    private void BinverseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BinverseActionPerformed
    {//GEN-HEADEREND:event_BinverseActionPerformed
        performCalc('^');
    }//GEN-LAST:event_BinverseActionPerformed

    private void BequalsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BequalsActionPerformed
    {//GEN-HEADEREND:event_BequalsActionPerformed
        performCalc('=');
    }//GEN-LAST:event_BequalsActionPerformed

    private void ProgrammerRadioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ProgrammerRadioActionPerformed
    {//GEN-HEADEREND:event_ProgrammerRadioActionPerformed
        CardLayout cl = (CardLayout) (CalcPanel.getLayout());
        cl.last(CalcPanel);
        showBinary();
    }//GEN-LAST:event_ProgrammerRadioActionPerformed

    private void BasicRadioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BasicRadioActionPerformed
    {//GEN-HEADEREND:event_BasicRadioActionPerformed
        CardLayout cl = (CardLayout) (CalcPanel.getLayout());
        cl.first(CalcPanel);
    }//GEN-LAST:event_BasicRadioActionPerformed

    private void BbackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_BbackActionPerformed
    {//GEN-HEADEREND:event_BbackActionPerformed
        if(jTextField1.getText().charAt(jTextField1.getText().length()-1) == '.')
        {
            dot = false;
        }
        if(jTextField1.getText().length() > 1)
        {
            jTextField1.setText(jTextField1.getText().substring(0, jTextField1.getText().length() - 1));
        }
        else
        {
            jTextField1.setText("0");
        }
    }//GEN-LAST:event_BbackActionPerformed

    private void PwordActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PwordActionPerformed
    {//GEN-HEADEREND:event_PwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PwordActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextField1ActionPerformed
    {//GEN-HEADEREND:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void PdecActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PdecActionPerformed
    {//GEN-HEADEREND:event_PdecActionPerformed
        P2.setEnabled(true);
        P3.setEnabled(true);
        P4.setEnabled(true);
        P5.setEnabled(true);
        P6.setEnabled(true);
        P7.setEnabled(true);
        P8.setEnabled(true);
        P9.setEnabled(true);
        Pa.setEnabled(false);
        Pb.setEnabled(false);
        Pc.setEnabled(false);
        Pd.setEnabled(false);
        Pe.setEnabled(false);
        Pf.setEnabled(false);
        changeBase(base, 10);
    }//GEN-LAST:event_PdecActionPerformed

    private void PoctActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PoctActionPerformed
    {//GEN-HEADEREND:event_PoctActionPerformed
        P2.setEnabled(true);
        P3.setEnabled(true);
        P4.setEnabled(true);
        P5.setEnabled(true);
        P6.setEnabled(true);
        P7.setEnabled(true);
        P8.setEnabled(false);
        P9.setEnabled(false);
        Pa.setEnabled(false);
        Pb.setEnabled(false);
        Pc.setEnabled(false);
        Pd.setEnabled(false);
        Pe.setEnabled(false);
        Pf.setEnabled(false);
        changeBase(base, 8);
    }//GEN-LAST:event_PoctActionPerformed

    private void PhexActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PhexActionPerformed
    {//GEN-HEADEREND:event_PhexActionPerformed
        P2.setEnabled(true);
        P3.setEnabled(true);
        P4.setEnabled(true);
        P5.setEnabled(true);
        P6.setEnabled(true);
        P7.setEnabled(true);
        P8.setEnabled(true);
        P9.setEnabled(true);
        Pa.setEnabled(true);
        Pb.setEnabled(true);
        Pc.setEnabled(true);
        Pd.setEnabled(true);
        Pe.setEnabled(true);
        Pf.setEnabled(true);
        changeBase(base, 16);
    }//GEN-LAST:event_PhexActionPerformed

    private void PbinActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PbinActionPerformed
    {//GEN-HEADEREND:event_PbinActionPerformed
        P2.setEnabled(false);
        P3.setEnabled(false);
        P4.setEnabled(false);
        P5.setEnabled(false);
        P6.setEnabled(false);
        P7.setEnabled(false);
        P8.setEnabled(false);
        P9.setEnabled(false);
        Pa.setEnabled(false);
        Pb.setEnabled(false);
        Pc.setEnabled(false);
        Pd.setEnabled(false);
        Pe.setEnabled(false);
        Pf.setEnabled(false);
        changeBase(base, 2);
    }//GEN-LAST:event_PbinActionPerformed

    private void P0ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P0ActionPerformed
    {//GEN-HEADEREND:event_P0ActionPerformed
        pDisplayInput("0");
    }//GEN-LAST:event_P0ActionPerformed

    private void P1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P1ActionPerformed
    {//GEN-HEADEREND:event_P1ActionPerformed
        pDisplayInput("1");
    }//GEN-LAST:event_P1ActionPerformed

    private void P2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P2ActionPerformed
    {//GEN-HEADEREND:event_P2ActionPerformed
        pDisplayInput("2");
    }//GEN-LAST:event_P2ActionPerformed

    private void P3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P3ActionPerformed
    {//GEN-HEADEREND:event_P3ActionPerformed
        pDisplayInput("3");
    }//GEN-LAST:event_P3ActionPerformed

    private void P4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P4ActionPerformed
    {//GEN-HEADEREND:event_P4ActionPerformed
        pDisplayInput("4");
    }//GEN-LAST:event_P4ActionPerformed

    private void P5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P5ActionPerformed
    {//GEN-HEADEREND:event_P5ActionPerformed
        pDisplayInput("5");
    }//GEN-LAST:event_P5ActionPerformed

    private void P6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P6ActionPerformed
    {//GEN-HEADEREND:event_P6ActionPerformed
        pDisplayInput("6");
    }//GEN-LAST:event_P6ActionPerformed

    private void P7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P7ActionPerformed
    {//GEN-HEADEREND:event_P7ActionPerformed
        pDisplayInput("7");
    }//GEN-LAST:event_P7ActionPerformed

    private void P8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P8ActionPerformed
    {//GEN-HEADEREND:event_P8ActionPerformed
        pDisplayInput("8");
    }//GEN-LAST:event_P8ActionPerformed

    private void P9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_P9ActionPerformed
    {//GEN-HEADEREND:event_P9ActionPerformed
        pDisplayInput("9");
    }//GEN-LAST:event_P9ActionPerformed

    private void PaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PaActionPerformed
    {//GEN-HEADEREND:event_PaActionPerformed
        pDisplayInput("A");
    }//GEN-LAST:event_PaActionPerformed

    private void PbActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PbActionPerformed
    {//GEN-HEADEREND:event_PbActionPerformed
        pDisplayInput("B");
    }//GEN-LAST:event_PbActionPerformed

    private void PcActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PcActionPerformed
    {//GEN-HEADEREND:event_PcActionPerformed
       pDisplayInput("C");
    }//GEN-LAST:event_PcActionPerformed

    private void PdActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PdActionPerformed
    {//GEN-HEADEREND:event_PdActionPerformed
        pDisplayInput("D");
    }//GEN-LAST:event_PdActionPerformed

    private void PeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PeActionPerformed
    {//GEN-HEADEREND:event_PeActionPerformed
        pDisplayInput("E");
    }//GEN-LAST:event_PeActionPerformed

    private void PfActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PfActionPerformed
    {//GEN-HEADEREND:event_PfActionPerformed
        pDisplayInput("F");
    }//GEN-LAST:event_PfActionPerformed

    private void PclearActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PclearActionPerformed
    {//GEN-HEADEREND:event_PclearActionPerformed
        jTextField2.setText("0");
        showBinary();
        deleteDisplay = true;
        pnum = 0b0;
        opp = '$';
    }//GEN-LAST:event_PclearActionPerformed

    private void PceActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PceActionPerformed
    {//GEN-HEADEREND:event_PceActionPerformed
         jTextField2.setText("0");
         showBinary();
         deleteDisplay = true;
    }//GEN-LAST:event_PceActionPerformed

    private void PbackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PbackActionPerformed
    {//GEN-HEADEREND:event_PbackActionPerformed
        if(jTextField2.getText().length() > 1)
        {
            jTextField2.setText(jTextField2.getText().substring(0, 
                    jTextField2.getText().length() - 1));
        }
        else
        {
            jTextField2.setText("0");
        }
        showBinary();
    }//GEN-LAST:event_PbackActionPerformed

    private void PmsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmsActionPerformed
    {//GEN-HEADEREND:event_PmsActionPerformed
        pmemory = Integer.parseInt(jTextField2.getText(), base);
    }//GEN-LAST:event_PmsActionPerformed

    private void PmrActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmrActionPerformed
    {//GEN-HEADEREND:event_PmrActionPerformed
        jTextField2.setText(Integer.toString(pmemory, base));
        showBinary();
    }//GEN-LAST:event_PmrActionPerformed

    private void PMCActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PMCActionPerformed
    {//GEN-HEADEREND:event_PMCActionPerformed
        pmemory = 0;
    }//GEN-LAST:event_PMCActionPerformed

    private void PmminusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmminusActionPerformed
    {//GEN-HEADEREND:event_PmminusActionPerformed
        Integer x = new Integer(Integer.parseInt(jTextField2.getText(), base));
        pmemory -= x;
    }//GEN-LAST:event_PmminusActionPerformed

    private void PmplusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmplusActionPerformed
    {//GEN-HEADEREND:event_PmplusActionPerformed
        Integer x = new Integer(Integer.parseInt(jTextField2.getText(), base));
        pmemory += x;
    }//GEN-LAST:event_PmplusActionPerformed

    private void PplusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PplusActionPerformed
    {//GEN-HEADEREND:event_PplusActionPerformed
        programmingCalc('+');
    }//GEN-LAST:event_PplusActionPerformed

    private void PminusActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PminusActionPerformed
    {//GEN-HEADEREND:event_PminusActionPerformed
        programmingCalc('-');
    }//GEN-LAST:event_PminusActionPerformed

    private void PmultiplyActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmultiplyActionPerformed
    {//GEN-HEADEREND:event_PmultiplyActionPerformed
        programmingCalc('*');
    }//GEN-LAST:event_PmultiplyActionPerformed

    private void PdivideActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PdivideActionPerformed
    {//GEN-HEADEREND:event_PdivideActionPerformed
        programmingCalc('/');
    }//GEN-LAST:event_PdivideActionPerformed

    private void PequalsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PequalsActionPerformed
    {//GEN-HEADEREND:event_PequalsActionPerformed
        programmingCalc('=');
    }//GEN-LAST:event_PequalsActionPerformed

    private void PmodActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PmodActionPerformed
    {//GEN-HEADEREND:event_PmodActionPerformed
        programmingCalc('@');
    }//GEN-LAST:event_PmodActionPerformed

    private void ProlActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ProlActionPerformed
    {//GEN-HEADEREND:event_ProlActionPerformed
        programmingCalc('<');
    }//GEN-LAST:event_ProlActionPerformed

    private void ProrActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ProrActionPerformed
    {//GEN-HEADEREND:event_ProrActionPerformed
        programmingCalc('>');
    }//GEN-LAST:event_ProrActionPerformed

    private void PorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PorActionPerformed
    {//GEN-HEADEREND:event_PorActionPerformed
        programmingCalc('|');
    }//GEN-LAST:event_PorActionPerformed

    private void PxorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PxorActionPerformed
    {//GEN-HEADEREND:event_PxorActionPerformed
        programmingCalc(']');
    }//GEN-LAST:event_PxorActionPerformed

    private void PlishActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PlishActionPerformed
    {//GEN-HEADEREND:event_PlishActionPerformed
        programmingCalc('{');
    }//GEN-LAST:event_PlishActionPerformed

    private void PrishActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PrishActionPerformed
    {//GEN-HEADEREND:event_PrishActionPerformed
        programmingCalc('}');
    }//GEN-LAST:event_PrishActionPerformed

    private void PnotActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PnotActionPerformed
    {//GEN-HEADEREND:event_PnotActionPerformed
        programmingCalc('!');
    }//GEN-LAST:event_PnotActionPerformed

    private void PandActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PandActionPerformed
    {//GEN-HEADEREND:event_PandActionPerformed
        programmingCalc('&');
    }//GEN-LAST:event_PandActionPerformed

    private void PnegateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_PnegateActionPerformed
    {//GEN-HEADEREND:event_PnegateActionPerformed
        programmingCalc('~');
    }//GEN-LAST:event_PnegateActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        jDialog1.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void AboutButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_AboutButtonActionPerformed
    {//GEN-HEADEREND:event_AboutButtonActionPerformed
        jDialog1.setVisible(true);
    }//GEN-LAST:event_AboutButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(Calc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new Calc().setVisible(true);
            }
        });
    }
    
    private void changeBase(int oldBase, int newBase)
    {
        Integer x = new Integer(Integer.parseInt(jTextField2.getText(),
                oldBase));
        jTextField2.setText(Integer.toString(x, newBase));
        base = newBase;
        showBinary();
    }
    
    private void pDisplayInput(String value)
    {
        if(jTextField2.getText().equals("0") || deleteDisplay)
        {
            jTextField2.setText(value);
            deleteDisplay = false;
        }
        else
        {
            jTextField2.setText(jTextField2.getText() + value);
        }
        showBinary();
    }
    
    private void showBinary()
    {
        Integer x = new Integer(Integer.parseInt(jTextField2.getText(), base));
        jTextField3.setText(Integer.toBinaryString(x));
    }
    
    private void displayInput(String value)
    {
        if (jTextField1.getText().equals("0") || deleteDisplay)
        {
            jTextField1.setText(value);
            deleteDisplay = false;
        } else
        {
            jTextField1.setText(jTextField1.getText() + value);
        }
    }
    
    private void performCalc(char symbol)
    {
        //perform bianary opperations first
       if('~' == symbol)
       {
           Double x = new Double(jTextField1.getText());
           x = -x;
           jTextField1.setText(x.toString());
       }
       else if('#' == symbol)
       {
           Double x = new Double(jTextField1.getText());
           x = java.lang.Math.sqrt(x);
           jTextField1.setText(x.toString());
           deleteDisplay = true;
       }
       else if('^' == symbol)
       {
           Double x  = new Double(jTextField1.getText());
           if(0.0 != x)
           {
               x = 1 / x;
           }
           jTextField1.setText(x.toString());
       }
       else if('$' == opp)
       {
           opp = symbol;
           deleteDisplay = true;
           num = jTextField1.getText();
           dot = false;
       }
       else if('%' == symbol)
       {
           Double x = new Double(num);
           Double y = new Double(jTextField1.getText());
           y /= 100;
           Double answer = x * y;
           jTextField1.setText(answer.toString());
       }
       else//perform a opperation
       {
           Double x = new Double(num);
           Double y = new Double(jTextField1.getText());
           Double answer = 0.0;
           
           //perfom a opperation
           switch(opp)
           {
               case '+':
                   answer = x  + y;
                   break;
               case '-':
                   answer = x - y;
                   break;
               case '*':
                   answer = x * y;
                   break;
               case '/':
                   answer = x / y;
                   break;
           }
           jTextField1.setText(answer.toString());
           deleteDisplay = true;
           opp = '$';
           dot = false;
       }
    }
    
    private void programmingCalc(char symbol)
    {
        Integer x = pnum;
        Integer y = Integer.parseInt(jTextField2.getText(), base);
        Integer answer = 0;
        if('<' == symbol)
        {
            answer = y << 1;
        }
        else if('>' == symbol)
        {
            answer = y >> 1;
        }
        else if('!' == symbol)
        {
            answer = ~y;
        }
        else if('~' == symbol)
        {
            answer = -y;
        }
        else if('$' == opp)
       {
           pnum = y;
           deleteDisplay = true;
           opp =  symbol;
       }
       else
        {          
           switch(opp)
           {
               case '+':
                   answer = x  + y;
                   break;
               case '-':
                   answer = x - y;
                   break;
               case '*':
                   answer = x * y;
                   break;
               case '/':
                   answer = x / y;
                   break;
               case '@':
                   answer = x % y;
                   break;
               case '|':
                   answer = x | y;
                   break;
               case ']':
                   answer = x ^ y;
                   break;
               case '{':
                   answer = x << y;
                   break;
               case '}':
                   answer = x >> y;
                   break;
               case '&':
                   answer = x & y;
                   break;
           }
           deleteDisplay = true;
           opp = '$';
       }
        jTextField2.setText(Integer.toString(answer, base));
        showBinary();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutButton;
    private javax.swing.JButton B0;
    private javax.swing.JButton B1;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton B9;
    private javax.swing.ButtonGroup Base;
    private javax.swing.JPanel BasicPanel;
    private javax.swing.JRadioButtonMenuItem BasicRadio;
    private javax.swing.JButton Bback;
    private javax.swing.JButton Bc;
    private javax.swing.JButton Bce;
    private javax.swing.JButton Bdivide;
    private javax.swing.JButton Bdot;
    private javax.swing.JButton Bequals;
    private javax.swing.JButton Binverse;
    private javax.swing.JButton Bmc;
    private javax.swing.JButton Bmminus;
    private javax.swing.JButton Bmplus;
    private javax.swing.JButton Bmr;
    private javax.swing.JButton Bms;
    private javax.swing.JButton Bmultiply;
    private javax.swing.JButton Bnegate;
    private javax.swing.JButton Bpercent;
    private javax.swing.JButton Bplus;
    private javax.swing.JButton Broot;
    private javax.swing.JButton Bsubtrack;
    private javax.swing.JPanel CalcPanel;
    private javax.swing.ButtonGroup Calcmode;
    private javax.swing.JButton P0;
    private javax.swing.JButton P1;
    private javax.swing.JButton P2;
    private javax.swing.JButton P3;
    private javax.swing.JButton P4;
    private javax.swing.JButton P5;
    private javax.swing.JButton P6;
    private javax.swing.JButton P7;
    private javax.swing.JButton P8;
    private javax.swing.JButton P9;
    private javax.swing.JButton PMC;
    private javax.swing.JButton Pa;
    private javax.swing.JButton Pand;
    private javax.swing.JButton Pb;
    private javax.swing.JButton Pback;
    private javax.swing.JRadioButton Pbin;
    private javax.swing.JRadioButton Pbyte;
    private javax.swing.JButton Pc;
    private javax.swing.JButton Pce;
    private javax.swing.JButton Pclear;
    private javax.swing.JButton Pclosing;
    private javax.swing.JButton Pd;
    private javax.swing.JRadioButton Pdec;
    private javax.swing.JButton Pdivide;
    private javax.swing.JButton Pdot;
    private javax.swing.JRadioButton Pdword;
    private javax.swing.JButton Pe;
    private javax.swing.JButton Pequals;
    private javax.swing.JButton Pf;
    private javax.swing.JRadioButton Phex;
    private javax.swing.JButton Pinverse;
    private javax.swing.JButton Plish;
    private javax.swing.JButton Pminus;
    private javax.swing.JButton Pmminus;
    private javax.swing.JButton Pmod;
    private javax.swing.JButton Pmplus;
    private javax.swing.JButton Pmr;
    private javax.swing.JButton Pms;
    private javax.swing.JButton Pmultiply;
    private javax.swing.JButton Pnegate;
    private javax.swing.JButton Pnot;
    private javax.swing.JRadioButton Poct;
    private javax.swing.JButton Popening;
    private javax.swing.JButton Por;
    private javax.swing.JButton Ppercent;
    private javax.swing.JButton Pplus;
    private javax.swing.JRadioButton Pqword;
    private javax.swing.JButton Prish;
    private javax.swing.JPanel ProgrammerPanel;
    private javax.swing.JRadioButtonMenuItem ProgrammerRadio;
    private javax.swing.JButton Prol;
    private javax.swing.JButton Proot;
    private javax.swing.JButton Pror;
    private javax.swing.JRadioButton Pword;
    private javax.swing.JButton Pxor;
    private javax.swing.ButtonGroup Size;
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
